// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "produces": [
    "application/json;charset=utf-8"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "\n\n",
    "title": "CutomLogs",
    "version": "0.1.0_inProgress",
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "/redoc/logo.png"
    }
  },
  "host": "localhost:8090",
  "basePath": "/utility/log/v1",
  "paths": {
    "/checklife": {
      "get": {
        "produces": [
          "application/json;charset=utf-8"
        ],
        "tags": [
          "System"
        ],
        "summary": "get response",
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/System"
            }
          },
          "401": {
            "description": "Unauthorized\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not Allowed\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/preserve": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "produces": [
          "application/json;charset=utf-8"
        ],
        "tags": [
          "Log Preserve"
        ],
        "summary": "get response",
        "parameters": [
          {
            "type": "string",
            "description": "Report will be generated for transactions done from this date.",
            "name": "fromDate",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Report will be generated for transactions done before this date.Default value : current date",
            "name": "toDate",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Response"
            },
            "headers": {
              "X-Expected-Records-Count": {
                "type": "integer",
                "description": "No of actual records against the filter applied. Since it is NRT API so a little discrepancy could be expected"
              },
              "X-Fetched-Records-Count": {
                "type": "integer",
                "description": "No of records returned against the API request"
              }
            }
          },
          "401": {
            "description": "Unauthorized\n\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden\n\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not Allowed\n\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error\n\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object"
    },
    "Response": {
      "type": "array",
      "items": {
        "type": "object",
        "required": [
          "_id",
          "someOtherId",
          "lastWriteDate",
          "Header",
          "Movments"
        ],
        "properties": {
          "Header": {
            "$ref": "#/definitions/header"
          },
          "_id": {
            "type": "string"
          },
          "lastWriteDate": {
            "type": "string",
            "format": "date-time"
          },
          "someOtherId": {
            "type": "string"
          }
        }
      }
    },
    "System": {
      "type": "object",
      "required": [
        "version",
        "buildVersion",
        "status",
        "uptime"
      ],
      "properties": {
        "buildVersion": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "uptime": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "header": {
      "type": "object",
      "required": [
        "creationDate",
        "isIdenticalTransaction",
        "amount",
        "sourceServiceType",
        "transactionId",
        "transactionStatus",
        "errorCode",
        "modifiedBy",
        "modifiedOn"
      ],
      "properties": {
        "amount": {
          "type": "number",
          "format": "float64"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "errorCode": {
          "type": "string"
        },
        "isIdenticalTransaction": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "modifiedOn": {
          "type": "string",
          "format": "date-time"
        },
        "sourceServiceType": {
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        },
        "transactionStatus": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "apikey",
      "in": "header"
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "produces": [
    "application/json;charset=utf-8"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "\n\n",
    "title": "CutomLogs",
    "version": "0.1.0_inProgress",
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "/redoc/logo.png"
    }
  },
  "host": "localhost:8090",
  "basePath": "/utility/log/v1",
  "paths": {
    "/checklife": {
      "get": {
        "produces": [
          "application/json;charset=utf-8"
        ],
        "tags": [
          "System"
        ],
        "summary": "get response",
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/System"
            }
          },
          "401": {
            "description": "Unauthorized\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not Allowed\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/preserve": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "produces": [
          "application/json;charset=utf-8"
        ],
        "tags": [
          "Log Preserve"
        ],
        "summary": "get response",
        "parameters": [
          {
            "type": "string",
            "description": "Report will be generated for transactions done from this date.",
            "name": "fromDate",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Report will be generated for transactions done before this date.Default value : current date",
            "name": "toDate",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Response"
            },
            "headers": {
              "X-Expected-Records-Count": {
                "type": "integer",
                "description": "No of actual records against the filter applied. Since it is NRT API so a little discrepancy could be expected"
              },
              "X-Fetched-Records-Count": {
                "type": "integer",
                "description": "No of records returned against the API request"
              }
            }
          },
          "401": {
            "description": "Unauthorized\n\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden\n\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not Allowed\n\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error\n\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object"
    },
    "Response": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ResponseItems0"
      }
    },
    "ResponseItems0": {
      "type": "object",
      "required": [
        "_id",
        "someOtherId",
        "lastWriteDate",
        "Header",
        "Movments"
      ],
      "properties": {
        "Header": {
          "$ref": "#/definitions/header"
        },
        "_id": {
          "type": "string"
        },
        "lastWriteDate": {
          "type": "string",
          "format": "date-time"
        },
        "someOtherId": {
          "type": "string"
        }
      }
    },
    "System": {
      "type": "object",
      "required": [
        "version",
        "buildVersion",
        "status",
        "uptime"
      ],
      "properties": {
        "buildVersion": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "uptime": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "header": {
      "type": "object",
      "required": [
        "creationDate",
        "isIdenticalTransaction",
        "amount",
        "sourceServiceType",
        "transactionId",
        "transactionStatus",
        "errorCode",
        "modifiedBy",
        "modifiedOn"
      ],
      "properties": {
        "amount": {
          "type": "number",
          "format": "float64"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "errorCode": {
          "type": "string"
        },
        "isIdenticalTransaction": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "modifiedOn": {
          "type": "string",
          "format": "date-time"
        },
        "sourceServiceType": {
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        },
        "transactionStatus": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "apikey",
      "in": "header"
    }
  }
}`))
}
